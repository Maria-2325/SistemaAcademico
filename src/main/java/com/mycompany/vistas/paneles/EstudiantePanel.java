/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.vistas.paneles;

import javax.swing.table.DefaultTableModel;

import com.mycompany.controladores.EstudianteControlador;
import com.mycompany.iestudiantes.Estudiante;
import com.mycompany.vistas.MainWindow;
import com.mycompany.vistas.sistema.EstudianteVista;

/**
 *
 * @author ibarr
 */
public class EstudiantePanel extends javax.swing.JPanel {

    /**
     * Creates new form EstudiantePanel
     */
    
    // AGREGAR REFERENCIA AL CONTROLADOR
    private EstudianteControlador controlador;
    
    public EstudiantePanel() {
        initComponents();
        setBackground(new java.awt.Color(255, 255, 255));
    }

    // CONSTRUCTOR CON CONTROLADOR
    public EstudiantePanel(EstudianteControlador controlador) {
        this.controlador = controlador;
        initComponents();
        setBackground(new java.awt.Color(255, 255, 255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgMainJPanel = new javax.swing.JPanel();
        tablaJScrollPanel = new javax.swing.JScrollPane();
        tablaDatosPersonaExternaJTable = new javax.swing.JTable();
        menuBotonesJPanel = new javax.swing.JPanel();
        btnEliminarJButton = new javax.swing.JButton();
        btnActualizarJButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 500));

        bgMainJPanel.setBackground(new java.awt.Color(255, 255, 255));

        tablaJScrollPanel.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        tablaDatosPersonaExternaJTable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        tablaDatosPersonaExternaJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "ID", "Cédula", "Correo Institucional", "Correo Personal", "Còdigo"
            }
        ));
        tablaJScrollPanel.setViewportView(tablaDatosPersonaExternaJTable);

        menuBotonesJPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnEliminarJButton.setText("Eliminar");
        btnEliminarJButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarJButtonMouseClicked(evt);
            }
        });

        btnActualizarJButton.setText("Actualizar");
        btnActualizarJButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarJButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout menuBotonesJPanelLayout = new javax.swing.GroupLayout(menuBotonesJPanel);
        menuBotonesJPanel.setLayout(menuBotonesJPanelLayout);
        menuBotonesJPanelLayout.setHorizontalGroup(
            menuBotonesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuBotonesJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnActualizarJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        menuBotonesJPanelLayout.setVerticalGroup(
            menuBotonesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBotonesJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(menuBotonesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizarJButton)
                    .addComponent(btnEliminarJButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout bgMainJPanelLayout = new javax.swing.GroupLayout(bgMainJPanel);
        bgMainJPanel.setLayout(bgMainJPanelLayout);
        bgMainJPanelLayout.setHorizontalGroup(
            bgMainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablaJScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
            .addGroup(bgMainJPanelLayout.createSequentialGroup()
                .addComponent(menuBotonesJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        bgMainJPanelLayout.setVerticalGroup(
            bgMainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgMainJPanelLayout.createSequentialGroup()
                .addComponent(tablaJScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuBotonesJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgMainJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgMainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarJButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarJButtonMouseClicked
        // TODO add your handling code here:
        int fila = tablaDatosPersonaExternaJTable.getSelectedRow();

        if (fila != -1) {
            int confirmacion = javax.swing.JOptionPane.showConfirmDialog(
                this,
                "¿Deseas eliminar este estudiante?",
                "Confirmación",
                javax.swing.JOptionPane.YES_NO_OPTION
            );

            if (confirmacion == javax.swing.JOptionPane.YES_OPTION) {
                // OBTENER ID DESDE LA COLUMNA 1 (ÍNDICE 1)
                int id = Integer.parseInt(tablaDatosPersonaExternaJTable.getValueAt(fila, 1).toString());

                // LLAMAR AL CONTROLADOR
                boolean eliminado = controlador.eliminarEstudiante(id);

                if (eliminado) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Estudiante eliminado exitosamente.");
                    actualizarTabla(controlador.obtenerEstudiantes());
                }

            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila primero.", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarJButtonMouseClicked

    private void btnActualizarJButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarJButtonMouseClicked
        // TODO add your handling code here:
        // VERIFICAR QUE SE HAYA SELECCIONADO UNA FILA
        int fila = tablaDatosPersonaExternaJTable.getSelectedRow();

        if (fila != -1) {
            // OBTENER EL ID DESDE LA COLUMNA 1 (ÍNDICE 1)
            int id = Integer.parseInt(tablaDatosPersonaExternaJTable.getValueAt(fila, 1).toString());

            // OBTENER EL ESTUDIANTE A ACTUALIZAR
            Estudiante estudianteAActualizar = controlador.obtenerEstudiantePorId(id);

            if (estudianteAActualizar != null) {
                // CREAR Y MOSTRAR LA VENTANA DE ACTUALIZACIÓN
                MainWindow mainWindow = (MainWindow) javax.swing.SwingUtilities.getWindowAncestor(this);
                EstudianteVista vistaActualizacion = new EstudianteVista(mainWindow);

                // CONFIGURAR EL MODO DE ACTUALIZACIÓN
                vistaActualizacion.configurarModoActualizacion(estudianteAActualizar);

                // MOSTRAR LA VENTANA
                vistaActualizacion.setVisible(true);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "No se pudo obtener los datos del estudiante.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila primero.", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarJButtonMouseClicked

    // MÉTODO PARA ACTUALIZAR LA TABLA CON DATOS DE ESTUDIANTES
    public void actualizarTabla(Estudiante[] estudiantes) {
        DefaultTableModel modelo = (DefaultTableModel) tablaDatosPersonaExternaJTable.getModel();
        modelo.setRowCount(0); // LIMPIAR FILAS

        for (Estudiante e : estudiantes) {
            if (e != null) {
                modelo.addRow(new Object[]{
                    e.getNombre(),
                    e.getId(),
                    e.getCedula(),
                    e.getCorreoInstitucional(), // CORREGIR NOMBRE DEL MÉTODO
                    e.getCorreoPersonal(),
                    e.getCodigo()
                });
            }
        }
    }

    // MÉTODO PARA BUSCAR ESTUDIANTE Y MOSTRAR EN TABLA
    public void buscarEstudiante(int id) {
        if (controlador != null) {
            Estudiante[] estudiantesEncontrados = controlador.buscarEstudiantePorId(id);
            actualizarTabla(estudiantesEncontrados);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgMainJPanel;
    private javax.swing.JButton btnActualizarJButton;
    private javax.swing.JButton btnEliminarJButton;
    private javax.swing.JPanel menuBotonesJPanel;
    private javax.swing.JTable tablaDatosPersonaExternaJTable;
    private javax.swing.JScrollPane tablaJScrollPanel;
    // End of variables declaration//GEN-END:variables
}
